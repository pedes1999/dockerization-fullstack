services:
  postgres:
    image: postgres
    ports:
      - "5432:5432"
    volumes:
      - ./db/my.cnf:/etc/my.cnf
      - ./db/data:/var/lib/postgresql/data
      - ./db/init.sql:/docker-entrypoint-initdb.d/01.sql
    environment:
      POSTGRES_DB: snm 
      POSTGRES_USER: myuser
      POSTGRES_PASSWORD: mypass 
    networks:
      - dbnet

  app:
    build:
      context: app
      dockerfile: Dockerfile
    ports:
      - "6000:6000"
    environment:
      APP_PORT: 6000
      DB_PASSWORD: mypass 
    networks:
      - dbnet
      - frontend

  frontend:
    build:
      context: frontend
      dockerfile: Dockerfile
    ports:
      - "8000:80"
    volumes:
      - ./frontend/nginx.conf:/etc/nginx/nginx.conf
      - ./frontend/default.conf:/etc/nginx/conf.d/default.conf
      - ./frontend/index.html:/usr/share/nginx/html/index.html
    networks:
      - frontend

  
  prometheus:
    image: prom/prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./monitoring/prometheus.yml:/etc/prometheus/prometheus.yml
    networks:
      - appnet
      - dbnet
    extra_hosts:
      - "host.podman.internal:host-gateway"

  cadvisor:
    image: gcr.io/cadvisor/cadvisor:v0.49.1
    ports:
      - "8090:8080"
    volumes:
      - /:/rootfs:ro
      - /var/run:/var/run:ro
      - /sys:/sys:ro
      - /var/lib/docker:/var/lib/docker:ro
      - /dev/disk:/dev/disk:ro
    networks:
      - appnet
      - dbnet
    privileged: true
    devices:
      - /dev/kmsg

  grafana:
    image: grafana/grafana-oss
    ports:
      - "3000:3000"
    networks:
      - appnet
      - dbnet

networks:
  dbnet:
    driver: bridge
  frontend:
    driver: bridge
  appnet:
    driver: bridge
